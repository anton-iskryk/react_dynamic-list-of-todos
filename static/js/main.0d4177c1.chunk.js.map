{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/FilterType.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","cn","type","onClick","selectTodo","TodoFilter","query","setQuery","filterType","setFilterType","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","getUser","userId","TodoModal","useState","user","setUser","getUserFromServer","a","userFromServer","Error","href","email","name","App","setTodos","ALL","isLoaded","setIsLoaded","getTodosFromServer","todosFromServer","useEffect","filter","doesIncludeQuery","toLowerCase","includes","ACTIVE","COMPLETED","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d4177c1.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (val: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const selectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far',\n                      { 'fa-eye': selectedTodo === null },\n                      { 'fa-eye-slash': selectedTodo?.id === todo.id })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setQuery: (val: string) => void;\n  filterType: string;\n  setFilterType: (val: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filterType,\n  setFilterType,\n}) => {\n  const handleFilterType = (event: React.ChangeEvent<HTMLSelectElement>) => (\n    setFilterType(event.target.value)\n  );\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => (\n    setQuery(event.target.value)\n  );\n\n  const handleQuery = () => (setQuery(''));\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={handleFilterType}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodo: (val: null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodo,\n}) => {\n  const {\n    id,\n    title,\n    userId,\n    completed,\n  } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n\n  const getUserFromServer = async () => {\n    try {\n      const userFromServer = await getUser(userId);\n\n      setUser(userFromServer);\n    } catch (error) {\n      throw new Error('User is not found');\n    }\n  };\n\n  getUserFromServer();\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!(user !== null) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/FilterType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterType, setFilterType] = useState<FilterType | string>(FilterType.ALL);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n\n  const filterTodos = () => {\n    const filteredTodos = todos.filter(todo => {\n      const doesIncludeQuery = todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase());\n\n      switch (filterType) {\n        case FilterType.ACTIVE:\n          return !todo.completed && doesIncludeQuery;\n        case FilterType.COMPLETED:\n          return todo.completed && doesIncludeQuery;\n        default:\n          return doesIncludeQuery;\n      }\n    });\n\n    return filteredTodos;\n  };\n\n  const getTodosFromServer = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n    setIsLoaded(true);\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filterType={filterType}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? (\n                  <TodoList\n                    todos={filterTodos()}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}